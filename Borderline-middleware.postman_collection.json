{
	"variables": [],
	"info": {
		"name": "Borderline-middleware",
		"_postman_id": "5b514073-278d-bfaa-ea42-8962b04106c7",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Create",
			"description": "",
			"item": [
				{
					"name": "Create empty query",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"valid\"] = jsonData.hasOwnProperty('_id') ;",
									"",
									"var query_id = jsonData['_id'];",
									"postman.setEnvironmentVariable(\"current_query\", query_id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/new",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create query and store id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"valid\"] = jsonData.hasOwnProperty('_id') ;",
									"",
									"var query_id = jsonData['_id'];",
									"postman.setEnvironmentVariable(\"current_query\", query_id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/new",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"credentials\": {\r\n    \"_id\": \"\",\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n  },\r\n  \"endpoint\": {\r\n    \"sourceType\": \"TS171\",\r\n    \"sourceName\": \"Transmart\",\r\n    \"sourceHost\": \"http://transmart-pro-test.thehyve.net\",\r\n    \"sourcePort\": 80,\r\n    \"public\": false\r\n  },\r\n  \"input\": {\r\n  \t\"local\": {},\r\n  \t\"std\": {}\r\n  },\r\n  \"output\": {\r\n  \t\"local\": {\r\n  \t\t\"dataSize\": 0,\r\n        \"dataId\": null\r\n  \t},\r\n  \t\"std\": {\r\n  \t\t\"dataSize\": 0,\r\n  \t\t\"dataId\": null\r\n  \t}\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Create query with missing endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"error\"] = jsonData.hasOwnProperty('error') ;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/new",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"credentials\": {\r\n    \"_id\": \"\",\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n  },\r\n  \"input\": {\r\n  \t\"local\": {},\r\n  \t\"std\": {}\r\n  },\r\n  \"output\": {\r\n  \t\"local\": {\r\n  \t\t\"dataSize\": 0,\r\n        \"dataId\": null\r\n  \t},\r\n  \t\"std\": {\r\n  \t\t\"dataSize\": 0,\r\n  \t\t\"dataId\": null\r\n  \t}\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Create query with missing invalid endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"error\"] = jsonData.hasOwnProperty('error') ;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/new",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"credentials\": {\r\n    \"_id\": \"\",\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n  },\r\n  \"endpoint\": {\r\n    \"sourceType\": \"thisshloudmakeitfail\",\r\n    \"sourceName\": \"Transmart\",\r\n    \"sourceHost\": \"http://transmart-pro-test.thehyve.net\",\r\n    \"sourcePort\": 80,\r\n    \"public\": false\r\n  },\r\n  \"input\": {\r\n  \t\"local\": {},\r\n  \t\"std\": {}\r\n  },\r\n  \"output\": {\r\n  \t\"local\": {\r\n  \t\t\"dataSize\": 0,\r\n        \"dataId\": null\r\n  \t},\r\n  \t\"std\": {\r\n  \t\t\"dataSize\": 0,\r\n  \t\t\"dataId\": null\r\n  \t}\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Credentials",
			"description": "",
			"item": [
				{
					"name": "Get query credentials from query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Username\"] = jsonData.hasOwnProperty('username');",
									"tests[\"Password\"] = jsonData.hasOwnProperty('password');"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/credentials",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update query credentials for query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Username\"] = jsonData.hasOwnProperty('username');",
									"tests[\"Password\"] = jsonData.hasOwnProperty('password');",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"date_now\", new Date().toString());"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/credentials",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"admin\",\n\t\"access_token\": \"d5263a5b-c639-4ec6-8676-5aa0605feffd\",\n\t\"expires_in\": 10,\n\t\"generated\": \"{{date_now}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Reset credentials to default for query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/credentials",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Is the query authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Username\"] = jsonData.hasOwnProperty('username');",
									"tests[\"Password\"] = jsonData.hasOwnProperty('password');"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/credentials/isAuth",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Get query credentials from invalid_query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 401;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"error\"] = jsonData.hasOwnProperty('error');"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/iamnotavalidqueryid/credentials",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Reset credentials to default for unknown_query",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 401;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Error\"] = jsonData.hasOwnProperty(\"error\");"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/iamnotavliadquery/credentials",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Endpoint",
			"description": "",
			"item": [
				{
					"name": "Get the endpoint for query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/endpoint",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Edit the endpoint for query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/endpoint",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"sourceType\": \"TS171\",\r\n\t\"sourceName\": \"Transmart the hyve\",\r\n\t\"sourceHost\": \"http://transmart-pro-test.thehyve.net\",\r\n\t\"sourcePort\": 80,\r\n\t\"public\": false\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Restore default endpoint for query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/endpoint",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Get the endpoint for unknown query",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty(\"error\");"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/notaquery_id/endpoint",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Edit the endpoint for query_id with invalid informations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty(\"error\");",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/endpoint",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Restore default endpoint for unknown_query",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty(\"error\");"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/notavalidideither/endpoint",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Execution",
			"description": "",
			"item": [
				{
					"name": "Execute query",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"hasStatus\"] = jsonData.hasOwnProperty(\"status\");",
									"tests[\"isRunning\"] = jsonData.status === \"running\";"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/execute",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"{{current_query}}\",\n\t\"nocache\": true\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get execution status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"hasStatus\"] = jsonData.hasOwnProperty(\"status\");"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/execute/{{current_query}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Get execution status for invalid query",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty(\"error\");"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/execute/notaqueryi",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Input",
			"description": "",
			"item": [
				{
					"name": "Get standard format input",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has std\"] = jsonData.hasOwnProperty('std');",
									"tests[\"Has local\"] = jsonData.hasOwnProperty('local');"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/input",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update standard input",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has uri\"] = jsonData.hasOwnProperty('uri');",
									"tests[\"Has params\"] = jsonData.hasOwnProperty('params');",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/input",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n \"uri\": \"/v2/observations?constraint=\",\r\n  \"params\": {\r\n  \t\"type\": \"Combination\", \r\n  \t\"operator\": \"and\", \r\n  \t\"args\": [\r\n  \t\t{\r\n  \t\t\t\"type\":\"ConceptConstraint\",\r\n  \t\t\t\"path\":\"\\\\Public Studies\\\\CATEGORICAL_VALUES\\\\Demography\\\\Gender\\\\Male\\\\\"\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\t\"type\":\"ConceptConstraint\",\r\n  \t\t\t\"path\":\"\\\\Public Studies\\\\CATEGORICAL_VALUES\\\\Demography\\\\Gender\\\\Female\\\\\"\r\n  \t\t}]\r\n  \t}\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Reset standard input to defaults",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/input",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Get standard format input for invalid query id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty('error');"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/heyholetsgo/input",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Update standard input with invalid format",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty('error');"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/input",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"coucou\": false,\n\t\"hibou\": true\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Reset standard input for invalid query",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty('error');"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/(  .  Y  . )/input",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Output",
			"description": "",
			"item": [
				{
					"name": "Get query standardized result for query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/output",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update query from standard data",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/output",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n\t\"coucou\": \"hibou\",\r\n\t\"ZirgMaster\": true\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Removes query_result from strorage and reset pointer to default",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"has local\"] = jsonData.hasOwnProperty(\"local\");",
									"tests[\"size 0\"] = jsonData.local.dataSize === 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/{{current_query}}/output",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Get query standardized result for invalid query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty('error');",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/(  . Y  .  )/output",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "[Error] Removes query_result for invalid query_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"isError\"] = jsonData.hasOwnProperty('error');"
								]
							}
						}
					],
					"request": {
						"url": "{{middleware_url}}/query/nopenopenope/output",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}